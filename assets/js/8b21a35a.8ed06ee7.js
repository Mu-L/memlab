"use strict";(self.webpackChunkmemlab_website=self.webpackChunkmemlab_website||[]).push([[666],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),k=o(a),u=r,c=k["".concat(p,".").concat(u)]||k[u]||m[u]||i;return a?n.createElement(c,l(l({ref:t},d),{},{components:a})):n.createElement(c,l({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=k;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},7635:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var n=a(7462),r=(a(7294),a(3905));const i={id:"api_src",title:"Module: api/src",sidebar_label:"api/src",sidebar_position:0,custom_edit_url:null},l=void 0,s={unversionedId:"api/modules/api_src",id:"api/modules/api_src",title:"Module: api/src",description:"Classes",source:"@site/docs/api/modules/api_src.md",sourceDirName:"api/modules",slug:"/api/modules/api_src",permalink:"/docs/api/modules/api_src",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"api_src",title:"Module: api/src",sidebar_label:"api/src",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"APIs",permalink:"/docs/api/"},next:{title:"heap-analysis/src",permalink:"/docs/api/modules/heap_analysis_src"}},p={},o=[{value:"Classes",id:"classes",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"RunOptions",id:"runoptions",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"analyze",id:"analyze",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"findLeaks",id:"findleaks",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"run",id:"run",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"takeSnapshots",id:"takesnapshots",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"warmupAndTakeSnapshots",id:"warmupandtakesnapshots",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-5",level:4}],d={toc:o};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},"BrowserInteractionResultReader"))),(0,r.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h3",{id:"runoptions"},"RunOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"RunOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Options for configuring browser interaction run"),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cookiesFile?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"cookies file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"evalInBrowserAfterInitLoad?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"AnyFunction")),(0,r.kt)("td",{parentName:"tr",align:"left"},"function to be evaluated in browser context after the web page initial load")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"scenario?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"IScenario")),(0,r.kt)("td",{parentName:"tr",align:"left"},"test scenario definition")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"snapshotForEachStep?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"if true, take heap snapshot for each interaction step, by default this is false, which means memlab will decide which steps it will take heap snapshots")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/memlab/blob/ecf8bdd/packages/api/src/API.ts#L44"},"api/src/API.ts:44")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"analyze"},"analyze"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"analyze"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"runResult"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"heapAnalyzer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"args?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"AnyValue"),">"),(0,r.kt)("p",null,"This API analyzes heap snapshot(s) with a specified heap analysis.\nThis is equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab analyze")," in CLI."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runResult")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},(0,r.kt)("inlineCode",{parentName:"a"},"BrowserInteractionResultReader"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"return value of a browser interaction run")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"heapAnalyzer")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BaseAnalysis")),(0,r.kt)("td",{parentName:"tr",align:"left"},"instance of a heap analysis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"args")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ParsedArgs")),(0,r.kt)("td",{parentName:"tr",align:"left"},"other CLI arguments that needs to be passed to the heap analysis")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"AnyValue"),">"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/memlab/blob/ecf8bdd/packages/api/src/API.ts#L165"},"api/src/API.ts:165")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"findleaks"},"findLeaks"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"findLeaks"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"runResult"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ISerializedInfo"),"[]",">"),(0,r.kt)("p",null,"This API finds memory leaks by analyzing heap snapshot(s)\nThis is equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab find-leaks")," in CLI."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"runResult")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},(0,r.kt)("inlineCode",{parentName:"a"},"BrowserInteractionResultReader"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"return value of a browser interaction run")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ISerializedInfo"),"[]",">"),(0,r.kt)("p",null,"an array of leak traces detected and clustered from the\nbrowser interaction"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/memlab/blob/ecf8bdd/packages/api/src/API.ts#L147"},"api/src/API.ts:147")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"run"},"run"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"run"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ISerializedInfo"),"[]",">"),(0,r.kt)("p",null,"This API runs browser interaction and find memory leaks triggered in browser\nThis is equivalent to run ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab run")," in CLI.\nThis is also equivalent to call {@link warmup}, ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules/api_src#takesnapshots"},"takeSnapshots"),",\nand ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules/api_src#findleaks"},"findLeaks"),"."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules/api_src#runoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RunOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"configure browser interaction run")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"ISerializedInfo"),"[]",">"),(0,r.kt)("p",null,"an array of leak traces detected and clustered from the\nbrowser interaction"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/memlab/blob/ecf8bdd/packages/api/src/API.ts#L104"},"api/src/API.ts:104")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"takesnapshots"},"takeSnapshots"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"takeSnapshots"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},(0,r.kt)("inlineCode",{parentName:"a"},"BrowserInteractionResultReader")),">"),(0,r.kt)("p",null,"This API runs E2E interaction and takes heap snapshots.\nThis is equivalent to run ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab snapshot")," in CLI."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules/api_src#runoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RunOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"configure browser interaction run")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},(0,r.kt)("inlineCode",{parentName:"a"},"BrowserInteractionResultReader")),">"),(0,r.kt)("p",null,"browser interaction results"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/memlab/blob/ecf8bdd/packages/api/src/API.ts#L126"},"api/src/API.ts:126")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"warmupandtakesnapshots"},"warmupAndTakeSnapshots"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"warmupAndTakeSnapshots"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},(0,r.kt)("inlineCode",{parentName:"a"},"BrowserInteractionResultReader")),">"),(0,r.kt)("p",null,"This API warms up web server, runs E2E interaction, and takes heap snapshots.\nThis is equivalent to run ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab warmup-and-snapshot")," in CLI.\nThis is also equivalent to call {@link warmup} and ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules/api_src#takesnapshots"},"takeSnapshots"),"."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules/api_src#runoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"RunOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"configure browser interaction run")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/api_src.BrowserInteractionResultReader"},(0,r.kt)("inlineCode",{parentName:"a"},"BrowserInteractionResultReader")),">"),(0,r.kt)("p",null,"browser interaction results"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/memlab/blob/ecf8bdd/packages/api/src/API.ts#L80"},"api/src/API.ts:80")))}m.isMDXComponent=!0}}]);