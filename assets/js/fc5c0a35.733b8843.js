"use strict";(self.webpackChunkmemlab_website=self.webpackChunkmemlab_website||[]).push([[57],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,d=u["".concat(c,".").concat(m)]||u[m]||k[m]||l;return a?n.createElement(d,o(o({ref:t},s),{},{components:a})):n.createElement(d,o({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7620:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>k,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={id:"core_src.IScenario",title:"Interface: IScenario",sidebar_label:"IScenario",custom_edit_url:null},o=void 0,i={unversionedId:"api/interfaces/core_src.IScenario",id:"api/interfaces/core_src.IScenario",title:"Interface: IScenario",description:"This is the type definition for the test scenario file that you pass in to",source:"@site/docs/api/interfaces/core_src.IScenario.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/core_src.IScenario",permalink:"/docs/api/interfaces/core_src.IScenario",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"core_src.IScenario",title:"Interface: IScenario",sidebar_label:"IScenario",custom_edit_url:null},sidebar:"sidebar",previous:{title:"ILeakFilter",permalink:"/docs/api/interfaces/core_src.ILeakFilter"}},c={},p=[{value:"Properties",id:"properties",level:2},{value:'<a id="action" name="action"></a> <code>Optional</code> <strong>action</strong>: <code>InteractionsCallback</code>',id:"-optional-action-interactionscallback",level:3},{value:'<a id="back" name="back"></a> <code>Optional</code> <strong>back</strong>: <code>InteractionsCallback</code>',id:"-optional-back-interactionscallback",level:3},{value:'<a id="beforeleakfilter" name="beforeleakfilter"></a> <code>Optional</code> <strong>beforeLeakFilter</strong>: <code>InitLeakFilterCallback</code>',id:"-optional-beforeleakfilter-initleakfiltercallback",level:3},{value:'<a id="ispageloaded" name="ispageloaded"></a> <code>Optional</code> <strong>isPageLoaded</strong>: <code>CheckPageLoadCallback</code>',id:"-optional-ispageloaded-checkpageloadcallback",level:3},{value:'<a id="leakfilter" name="leakfilter"></a> <code>Optional</code> <strong>leakFilter</strong>: <code>LeakFilterCallback</code>',id:"-optional-leakfilter-leakfiltercallback",level:3},{value:"Methods",id:"methods",level:2},{value:'<a id="cookies"></a><code>Optional</code> <strong>cookies</strong>()',id:"optional-cookies",level:3},{value:'<a id="repeat"></a><code>Optional</code> <strong>repeat</strong>()',id:"optional-repeat",level:3},{value:'<a id="url"></a><strong>url</strong>()',id:"url",level:3}],s={toc:p};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This is the type definition for the test scenario file that you pass in to\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab run --scenario")," command. The test scenario instance can also be\npassed to the ",(0,r.kt)("a",{parentName:"p",href:"docs/api/modules/api_src#run"},(0,r.kt)("inlineCode",{parentName:"a"},"run")," API")," exported by ",(0,r.kt)("inlineCode",{parentName:"p"},"@memlab/api"),"."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"-optional-action-interactionscallback"},(0,r.kt)("a",{id:"action",name:"action"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"action"),": ",(0,r.kt)("a",{parentName:"h3",href:"/docs/api/modules/core_src#interactionscallback"},(0,r.kt)("inlineCode",{parentName:"a"},"InteractionsCallback"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"action")," is callback function to define how the interactions should take place.\n",(0,r.kt)("inlineCode",{parentName:"p"},"memlab")," will interact with the page following what's described in the body\nof this function right before taking a heap snapshot for the target page."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Examples"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"async function action(page) {\n  const [button] = await page.$x(\"//button[contains(., 'Create detached DOMs')]\");\n  if (button) {\n    await button.click();\n  }\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L292"},"core/src/lib/Types.ts:292"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-optional-back-interactionscallback"},(0,r.kt)("a",{id:"back",name:"back"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"back"),": ",(0,r.kt)("a",{parentName:"h3",href:"/docs/api/modules/core_src#interactionscallback"},(0,r.kt)("inlineCode",{parentName:"a"},"InteractionsCallback"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"back")," is callback function to define how memlab should back/revert the action\nperformed before. Think of it as undo action."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"async function back(page) {\n  await page.click('a[href=\"/\"]')\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L304"},"core/src/lib/Types.ts:304"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-optional-beforeleakfilter-initleakfiltercallback"},(0,r.kt)("a",{id:"beforeleakfilter",name:"beforeleakfilter"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"beforeLeakFilter"),": ",(0,r.kt)("a",{parentName:"h3",href:"/docs/api/modules/core_src#initleakfiltercallback"},(0,r.kt)("inlineCode",{parentName:"a"},"InitLeakFilterCallback"))),(0,r.kt)("p",null,"Lifecycle function callback that is invoked initially once before calling any\nleak filter function."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"param"))," heap snapshot see ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/interfaces/core_src.IHeapSnapshot"},"IHeapSnapshot")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"param"))," the set of leaked object (node) ids."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L321"},"core/src/lib/Types.ts:321"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-optional-ispageloaded-checkpageloadcallback"},(0,r.kt)("a",{id:"ispageloaded",name:"ispageloaded"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"isPageLoaded"),": ",(0,r.kt)("a",{parentName:"h3",href:"/docs/api/modules/core_src#checkpageloadcallback"},(0,r.kt)("inlineCode",{parentName:"a"},"CheckPageLoadCallback"))),(0,r.kt)("p",null,"Callback function to provide if the page is loaded."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"param"))," puppeteer's ",(0,r.kt)("a",{parentName:"p",href:"https://pptr.dev/api/puppeteer.page/"},"Page")," object."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L313"},"core/src/lib/Types.ts:313"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-optional-leakfilter-leakfiltercallback"},(0,r.kt)("a",{id:"leakfilter",name:"leakfilter"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"leakFilter"),": ",(0,r.kt)("a",{parentName:"h3",href:"/docs/api/modules/core_src#leakfiltercallback"},(0,r.kt)("inlineCode",{parentName:"a"},"LeakFilterCallback"))),(0,r.kt)("p",null,"Callback that can be used to define a logic to filter the\nleaked objects. The callback is only called for every node\nallocated but not released from the target interaction\nin the heap snapshot."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"param"))," the node that is kept alive in the memory in the heap snapshot"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"param"))," the snapshot of target interaction"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"param"))," the set of leaked node ids"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"returns"))," the value indicating whether the given node in the snapshot\nshould be considered as leaked."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Examples"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// any node in the heap snapshot that is greater than 1MB\nfunction leakFilter(node, _snapshot, _leakedNodeIds) {\n return node.retainedSize > 1000000;\n};\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L342"},"core/src/lib/Types.ts:342"))))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"optional-cookies"},(0,r.kt)("a",{id:"cookies"}),(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"cookies"),"()"),(0,r.kt)("p",null,"If the page you are running memlab against requires authentication or\nspecific cookie(s) to be set, you can pass them as\na list of <name, value> pairs."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns"),": ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/modules/core_src#cookies"},(0,r.kt)("inlineCode",{parentName:"a"},"Cookies"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L264"},"core/src/lib/Types.ts:264"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"optional-repeat"},(0,r.kt)("a",{id:"repeat"}),(0,r.kt)("inlineCode",{parentName:"h3"},"Optional")," ",(0,r.kt)("strong",{parentName:"h3"},"repeat"),"()"),(0,r.kt)("p",null,"Specifies how many times ",(0,r.kt)("inlineCode",{parentName:"p"},"memlab")," should repeat the ",(0,r.kt)("inlineCode",{parentName:"p"},"action")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"back"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"number")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L308"},"core/src/lib/Types.ts:308"))))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"url"},(0,r.kt)("a",{id:"url"}),(0,r.kt)("strong",{parentName:"h3"},"url"),"()"),(0,r.kt)("p",null,"String value of the initial url of the page."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Examples"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const scenario = {\n  url: () => 'https://www.youtube.com',\n  // ...\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Returns"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"string")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Source"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/250b5ba/packages/core/src/lib/Types.ts#L276"},"core/src/lib/Types.ts:276"))))))}k.isMDXComponent=!0}}]);